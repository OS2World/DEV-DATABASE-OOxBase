
/*
 * This file was generated by the SOM Compiler.
 * FileName: ooxbase.h.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.17
 *     SOM Emitter emith: 2.47
 */

#ifndef SOM_ooxdbf_h
#define SOM_ooxdbf_h


/*
 * The SOM_STRICT_IDL macro means that we can ignore stars
 * in our declarations of objects.
 */
#define SOM_STRICT_IDL 1


#include <som.h>

/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * Define the class name as an object type
 */
#ifndef ooxdbf
#define ooxdbf SOMObject
#endif
#include <somobj.h>

/*
 * Start of bindings for IDL types
 */

#ifndef SOMClass
    #define SOMClass SOMObject
#endif /* SOMClass */
#ifndef ooxfield
    #define ooxfield SOMObject
#endif /* ooxfield */
#define ex_ooxdbf_ooxdbf_error "::ooxdbf::ooxdbf_error"
typedef
struct ooxdbf_ooxdbf_error {
long  ErrCode;
string  Reason;
} ooxdbf_ooxdbf_error;

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_ex_ooxdbf_error
    #ifdef ex_ooxdbf_error
        #undef ex_ooxdbf_error
        #define SOMTGD_ex_ooxdbf_error 1
    #else
        #define ex_ooxdbf_error ex_ooxdbf_ooxdbf_error
    #endif /* ex_ooxdbf_error */
#endif /* SOMTGD_ex_ooxdbf_error */
#ifndef SOMTGD_ooxdbf_error
    #ifdef ooxdbf_error
        #undef ooxdbf_error
        #define SOMTGD_ooxdbf_error 1
    #else
        #define ooxdbf_error ooxdbf_ooxdbf_error
    #endif /* ooxdbf_error */
#endif /* SOMTGD_ooxdbf_error */
#endif /* SOM_DONT_USE_SHORT_NAMES */

/*
 * End of bindings for IDL types.
 */

#define ooxdbf_MajorVersion 0
#define ooxdbf_MinorVersion 0

/*
 * External name shortening if required
 */
#ifdef SOM_USE_SHORT_EXTERNAL_NAMES
#define ooxdbfNewClass c
#pragma linkage(c, system)
#define ooxdbfClassData d
#define ooxdbfCClassData x
#endif /* SOM_USE_SHORT_EXTERNAL_NAMES */
/*--------------Migration------------*/
#define ooxdbf_classObj ooxdbfClassData.classObject
#define _ooxdbf ooxdbf_classObj

/*
 * Declare the class creation procedure
 */
SOMEXTERN SOMClass  SOMLINK ooxdbfNewClass(integer4 somtmajorVersion,
		integer4 somtminorVersion);
#pragma linkage(ooxdbfNewClass, system)

/*
 * Declare the class data structure
 */
SOMEXTERN struct ooxdbfClassDataStructure {
	SOMClass classObject;
	somMToken _get_current_record;
	somMToken _get_record_count;
	somMToken _get_field_count;
	somMToken _get_new_record_size;
	somMToken _set_new_record_size;
	somMToken Open;
	somMToken Read;
	somMToken Write;
	somMToken GoTo;
	somMToken Update;
	somMToken Close;
	somMToken field;
	somMToken field_by_name;
	somMToken reset_index;
	somMToken attach_index;
	somMToken use_index;
	somMToken createindex;
	somMToken buildindex;
	somMToken add_tag;
	somMToken find;
	somMToken reindex;
	somMToken Read_prev;
	somMToken Delete;
	somMToken Undelete;
	somMToken Pack;
	somMToken drop_tag;
	somMToken export;
	somMToken import;
	somMToken sort;
	somMToken usingfilename;
	somMToken defineDBF;
	somMToken defineDBFusing;
	somMToken DBFdefined;
	somMToken _get_deleted;
	somMToken addfld;
	somMToken dropfld;
	somMToken modifyfld;
} SOMDLINK ooxdbfClassData;

/*
 * Declare the C specific class data structure
 */
SOMEXTERN struct ooxdbfCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken instanceDataToken;
} SOMDLINK ooxdbfCClassData;

/*
 * New and Renew macros for ooxdbf
 */
#define ooxdbfNew() \
   ( _ooxdbf ? \
	_somNew(_ooxdbf) \
	: ( ooxdbfNewClass(\
		ooxdbf_MajorVersion, \
		ooxdbf_MinorVersion),\
	   _somNew(_ooxdbf)))
#define ooxdbfRenew(buf) \
   ( _ooxdbf ? \
	_somRenew(_ooxdbf, buf) \
	: ( ooxdbfNewClass(\
		ooxdbf_MajorVersion, \
		ooxdbf_MinorVersion),\
	   _somRenew(_ooxdbf, buf)))

/*
 * New Method: _get_current_record
 */
typedef long   SOMLINK somTP_ooxdbf__get_current_record(ooxdbf somSelf, Environment *ev);
#pragma linkage(somTP_ooxdbf__get_current_record, system)
typedef somTP_ooxdbf__get_current_record *somTD_ooxdbf__get_current_record;
/*
 * Method from the IDL attribute statement:
 * "readonly attribute long current_record"
 */
#define somMD_ooxdbf__get_current_record "::ooxdbf::_get_current_record"
#define ooxdbf__get_current_record(somSelf,ev) \
    (SOM_Resolve(somSelf, ooxdbf, _get_current_record) \
	(somSelf,ev))
#ifndef SOMGD_get_current_record
    #if (defined(_get_current_record) || defined(__get_current_record))
        #undef _get_current_record
        #undef __get_current_record
        #define SOMGD_get_current_record 1
    #else
        #define __get_current_record ooxdbf__get_current_record
    #endif /* __get_current_record */
#endif /* SOMGD_get_current_record */

/*
 * New Method: _get_record_count
 */
typedef long   SOMLINK somTP_ooxdbf__get_record_count(ooxdbf somSelf, Environment *ev);
#pragma linkage(somTP_ooxdbf__get_record_count, system)
typedef somTP_ooxdbf__get_record_count *somTD_ooxdbf__get_record_count;
/*
 * Method from the IDL attribute statement:
 * "readonly attribute long record_count"
 */
#define somMD_ooxdbf__get_record_count "::ooxdbf::_get_record_count"
#define ooxdbf__get_record_count(somSelf,ev) \
    (SOM_Resolve(somSelf, ooxdbf, _get_record_count) \
	(somSelf,ev))
#ifndef SOMGD_get_record_count
    #if (defined(_get_record_count) || defined(__get_record_count))
        #undef _get_record_count
        #undef __get_record_count
        #define SOMGD_get_record_count 1
    #else
        #define __get_record_count ooxdbf__get_record_count
    #endif /* __get_record_count */
#endif /* SOMGD_get_record_count */

/*
 * New Method: _get_field_count
 */
typedef long   SOMLINK somTP_ooxdbf__get_field_count(ooxdbf somSelf, Environment *ev);
#pragma linkage(somTP_ooxdbf__get_field_count, system)
typedef somTP_ooxdbf__get_field_count *somTD_ooxdbf__get_field_count;
/*
 * Method from the IDL attribute statement:
 * "readonly attribute long field_count"
 */
#define somMD_ooxdbf__get_field_count "::ooxdbf::_get_field_count"
#define ooxdbf__get_field_count(somSelf,ev) \
    (SOM_Resolve(somSelf, ooxdbf, _get_field_count) \
	(somSelf,ev))
#ifndef SOMGD_get_field_count
    #if (defined(_get_field_count) || defined(__get_field_count))
        #undef _get_field_count
        #undef __get_field_count
        #define SOMGD_get_field_count 1
    #else
        #define __get_field_count ooxdbf__get_field_count
    #endif /* __get_field_count */
#endif /* SOMGD_get_field_count */

/*
 * New Method: _get_deleted
 */
typedef boolean   SOMLINK somTP_ooxdbf__get_deleted(ooxdbf somSelf, Environment *ev);
#pragma linkage(somTP_ooxdbf__get_deleted, system)
typedef somTP_ooxdbf__get_deleted *somTD_ooxdbf__get_deleted;
/*
 * Method from the IDL attribute statement:
 * "readonly attribute boolean deleted"
 */
#define somMD_ooxdbf__get_deleted "::ooxdbf::_get_deleted"
#define ooxdbf__get_deleted(somSelf,ev) \
    (SOM_Resolve(somSelf, ooxdbf, _get_deleted) \
	(somSelf,ev))
#ifndef SOMGD_get_deleted
    #if (defined(_get_deleted) || defined(__get_deleted))
        #undef _get_deleted
        #undef __get_deleted
        #define SOMGD_get_deleted 1
    #else
        #define __get_deleted ooxdbf__get_deleted
    #endif /* __get_deleted */
#endif /* SOMGD_get_deleted */

/*
 * New Method: Open
 */
typedef short   SOMLINK somTP_ooxdbf_Open(ooxdbf somSelf, Environment *ev, 
		string dbfname);
#pragma linkage(somTP_ooxdbf_Open, system)
typedef somTP_ooxdbf_Open *somTD_ooxdbf_Open;
#define somMD_ooxdbf_Open "::ooxdbf::Open"
#define ooxdbf_Open(somSelf,ev,dbfname) \
    (SOM_Resolve(somSelf, ooxdbf, Open) \
	(somSelf,ev,dbfname))
#ifndef SOMGD_Open
    #if (defined(_Open) || defined(__Open))
        #undef _Open
        #undef __Open
        #define SOMGD_Open 1
    #else
        #define _Open ooxdbf_Open
    #endif /* _Open */
#endif /* SOMGD_Open */

/*
 * New Method: Read
 */
typedef short   SOMLINK somTP_ooxdbf_Read(ooxdbf somSelf, Environment *ev);
#pragma linkage(somTP_ooxdbf_Read, system)
typedef somTP_ooxdbf_Read *somTD_ooxdbf_Read;
#define somMD_ooxdbf_Read "::ooxdbf::Read"
#define ooxdbf_Read(somSelf,ev) \
    (SOM_Resolve(somSelf, ooxdbf, Read) \
	(somSelf,ev))
#ifndef SOMGD_Read
    #if (defined(_Read) || defined(__Read))
        #undef _Read
        #undef __Read
        #define SOMGD_Read 1
    #else
        #define _Read ooxdbf_Read
    #endif /* _Read */
#endif /* SOMGD_Read */

/*
 * New Method: Read_prev
 */
typedef short   SOMLINK somTP_ooxdbf_Read_prev(ooxdbf somSelf, Environment *ev);
#pragma linkage(somTP_ooxdbf_Read_prev, system)
typedef somTP_ooxdbf_Read_prev *somTD_ooxdbf_Read_prev;
#define somMD_ooxdbf_Read_prev "::ooxdbf::Read_prev"
#define ooxdbf_Read_prev(somSelf,ev) \
    (SOM_Resolve(somSelf, ooxdbf, Read_prev) \
	(somSelf,ev))
#ifndef SOMGD_Read_prev
    #if (defined(_Read_prev) || defined(__Read_prev))
        #undef _Read_prev
        #undef __Read_prev
        #define SOMGD_Read_prev 1
    #else
        #define _Read_prev ooxdbf_Read_prev
    #endif /* _Read_prev */
#endif /* SOMGD_Read_prev */

/*
 * New Method: Write
 */
typedef short   SOMLINK somTP_ooxdbf_Write(ooxdbf somSelf, Environment *ev);
#pragma linkage(somTP_ooxdbf_Write, system)
typedef somTP_ooxdbf_Write *somTD_ooxdbf_Write;
#define somMD_ooxdbf_Write "::ooxdbf::Write"
#define ooxdbf_Write(somSelf,ev) \
    (SOM_Resolve(somSelf, ooxdbf, Write) \
	(somSelf,ev))
#ifndef SOMGD_Write
    #if (defined(_Write) || defined(__Write))
        #undef _Write
        #undef __Write
        #define SOMGD_Write 1
    #else
        #define _Write ooxdbf_Write
    #endif /* _Write */
#endif /* SOMGD_Write */

/*
 * New Method: GoTo
 */
typedef short   SOMLINK somTP_ooxdbf_GoTo(ooxdbf somSelf, Environment *ev, 
		long recno);
#pragma linkage(somTP_ooxdbf_GoTo, system)
typedef somTP_ooxdbf_GoTo *somTD_ooxdbf_GoTo;
#define somMD_ooxdbf_GoTo "::ooxdbf::GoTo"
#define ooxdbf_GoTo(somSelf,ev,recno) \
    (SOM_Resolve(somSelf, ooxdbf, GoTo) \
	(somSelf,ev,recno))
#ifndef SOMGD_GoTo
    #if (defined(_GoTo) || defined(__GoTo))
        #undef _GoTo
        #undef __GoTo
        #define SOMGD_GoTo 1
    #else
        #define _GoTo ooxdbf_GoTo
    #endif /* _GoTo */
#endif /* SOMGD_GoTo */

/*
 * New Method: Update
 */
typedef short   SOMLINK somTP_ooxdbf_Update(ooxdbf somSelf, Environment *ev);
#pragma linkage(somTP_ooxdbf_Update, system)
typedef somTP_ooxdbf_Update *somTD_ooxdbf_Update;
#define somMD_ooxdbf_Update "::ooxdbf::Update"
#define ooxdbf_Update(somSelf,ev) \
    (SOM_Resolve(somSelf, ooxdbf, Update) \
	(somSelf,ev))
#ifndef SOMGD_Update
    #if (defined(_Update) || defined(__Update))
        #undef _Update
        #undef __Update
        #define SOMGD_Update 1
    #else
        #define _Update ooxdbf_Update
    #endif /* _Update */
#endif /* SOMGD_Update */

/*
 * New Method: Delete
 */
typedef short   SOMLINK somTP_ooxdbf_Delete(ooxdbf somSelf, Environment *ev);
#pragma linkage(somTP_ooxdbf_Delete, system)
typedef somTP_ooxdbf_Delete *somTD_ooxdbf_Delete;
#define somMD_ooxdbf_Delete "::ooxdbf::Delete"
#define ooxdbf_Delete(somSelf,ev) \
    (SOM_Resolve(somSelf, ooxdbf, Delete) \
	(somSelf,ev))
#ifndef SOMGD_Delete
    #if (defined(_Delete) || defined(__Delete))
        #undef _Delete
        #undef __Delete
        #define SOMGD_Delete 1
    #else
        #define _Delete ooxdbf_Delete
    #endif /* _Delete */
#endif /* SOMGD_Delete */

/*
 * New Method: Undelete
 */
typedef short   SOMLINK somTP_ooxdbf_Undelete(ooxdbf somSelf, Environment *ev);
#pragma linkage(somTP_ooxdbf_Undelete, system)
typedef somTP_ooxdbf_Undelete *somTD_ooxdbf_Undelete;
#define somMD_ooxdbf_Undelete "::ooxdbf::Undelete"
#define ooxdbf_Undelete(somSelf,ev) \
    (SOM_Resolve(somSelf, ooxdbf, Undelete) \
	(somSelf,ev))
#ifndef SOMGD_Undelete
    #if (defined(_Undelete) || defined(__Undelete))
        #undef _Undelete
        #undef __Undelete
        #define SOMGD_Undelete 1
    #else
        #define _Undelete ooxdbf_Undelete
    #endif /* _Undelete */
#endif /* SOMGD_Undelete */

/*
 * New Method: Pack
 */
typedef short   SOMLINK somTP_ooxdbf_Pack(ooxdbf somSelf, Environment *ev);
#pragma linkage(somTP_ooxdbf_Pack, system)
typedef somTP_ooxdbf_Pack *somTD_ooxdbf_Pack;
#define somMD_ooxdbf_Pack "::ooxdbf::Pack"
#define ooxdbf_Pack(somSelf,ev) \
    (SOM_Resolve(somSelf, ooxdbf, Pack) \
	(somSelf,ev))
#ifndef SOMGD_Pack
    #if (defined(_Pack) || defined(__Pack))
        #undef _Pack
        #undef __Pack
        #define SOMGD_Pack 1
    #else
        #define _Pack ooxdbf_Pack
    #endif /* _Pack */
#endif /* SOMGD_Pack */

/*
 * New Method: Close
 */
typedef short   SOMLINK somTP_ooxdbf_Close(ooxdbf somSelf, Environment *ev);
#pragma linkage(somTP_ooxdbf_Close, system)
typedef somTP_ooxdbf_Close *somTD_ooxdbf_Close;
#define somMD_ooxdbf_Close "::ooxdbf::Close"
#define ooxdbf_Close(somSelf,ev) \
    (SOM_Resolve(somSelf, ooxdbf, Close) \
	(somSelf,ev))
#ifndef SOMGD_Close
    #if (defined(_Close) || defined(__Close))
        #undef _Close
        #undef __Close
        #define SOMGD_Close 1
    #else
        #define _Close ooxdbf_Close
    #endif /* _Close */
#endif /* SOMGD_Close */

/*
 * New Method: field
 */
typedef ooxfield   SOMLINK somTP_ooxdbf_field(ooxdbf somSelf, Environment *ev, 
		long i);
#pragma linkage(somTP_ooxdbf_field, system)
typedef somTP_ooxdbf_field *somTD_ooxdbf_field;
#define somMD_ooxdbf_field "::ooxdbf::field"
#define ooxdbf_field(somSelf,ev,i) \
    (SOM_Resolve(somSelf, ooxdbf, field) \
	(somSelf,ev,i))
#ifndef SOMGD_field
    #if (defined(_field) || defined(__field))
        #undef _field
        #undef __field
        #define SOMGD_field 1
    #else
        #define _field ooxdbf_field
    #endif /* _field */
#endif /* SOMGD_field */

/*
 * New Method: field_by_name
 */
typedef ooxfield   SOMLINK somTP_ooxdbf_field_by_name(ooxdbf somSelf, Environment *ev, 
		string name);
#pragma linkage(somTP_ooxdbf_field_by_name, system)
typedef somTP_ooxdbf_field_by_name *somTD_ooxdbf_field_by_name;
#define somMD_ooxdbf_field_by_name "::ooxdbf::field_by_name"
#define ooxdbf_field_by_name(somSelf,ev,name) \
    (SOM_Resolve(somSelf, ooxdbf, field_by_name) \
	(somSelf,ev,name))
#ifndef SOMGD_field_by_name
    #if (defined(_field_by_name) || defined(__field_by_name))
        #undef _field_by_name
        #undef __field_by_name
        #define SOMGD_field_by_name 1
    #else
        #define _field_by_name ooxdbf_field_by_name
    #endif /* _field_by_name */
#endif /* SOMGD_field_by_name */

/*
 * New Method: reset_index
 */
typedef void   SOMLINK somTP_ooxdbf_reset_index(ooxdbf somSelf, Environment *ev, 
		long from);
#pragma linkage(somTP_ooxdbf_reset_index, system)
typedef somTP_ooxdbf_reset_index *somTD_ooxdbf_reset_index;
#define somMD_ooxdbf_reset_index "::ooxdbf::reset_index"
#define ooxdbf_reset_index(somSelf,ev,from) \
    (SOM_Resolve(somSelf, ooxdbf, reset_index) \
	(somSelf,ev,from))
#ifndef SOMGD_reset_index
    #if (defined(_reset_index) || defined(__reset_index))
        #undef _reset_index
        #undef __reset_index
        #define SOMGD_reset_index 1
    #else
        #define _reset_index ooxdbf_reset_index
    #endif /* _reset_index */
#endif /* SOMGD_reset_index */

/*
 * New Method: find
 */
typedef short   SOMLINK somTP_ooxdbf_find(ooxdbf somSelf, Environment *ev, 
		string key);
#pragma linkage(somTP_ooxdbf_find, system)
typedef somTP_ooxdbf_find *somTD_ooxdbf_find;
#define somMD_ooxdbf_find "::ooxdbf::find"
#define ooxdbf_find(somSelf,ev,key) \
    (SOM_Resolve(somSelf, ooxdbf, find) \
	(somSelf,ev,key))
#ifndef SOMGD_find
    #if (defined(_find) || defined(__find))
        #undef _find
        #undef __find
        #define SOMGD_find 1
    #else
        #define _find ooxdbf_find
    #endif /* _find */
#endif /* SOMGD_find */

/*
 * New Method: reindex
 */
typedef short   SOMLINK somTP_ooxdbf_reindex(ooxdbf somSelf, Environment *ev);
#pragma linkage(somTP_ooxdbf_reindex, system)
typedef somTP_ooxdbf_reindex *somTD_ooxdbf_reindex;
#define somMD_ooxdbf_reindex "::ooxdbf::reindex"
#define ooxdbf_reindex(somSelf,ev) \
    (SOM_Resolve(somSelf, ooxdbf, reindex) \
	(somSelf,ev))
#ifndef SOMGD_reindex
    #if (defined(_reindex) || defined(__reindex))
        #undef _reindex
        #undef __reindex
        #define SOMGD_reindex 1
    #else
        #define _reindex ooxdbf_reindex
    #endif /* _reindex */
#endif /* SOMGD_reindex */

/*
 * New Method: attach_index
 */
typedef long   SOMLINK somTP_ooxdbf_attach_index(ooxdbf somSelf, Environment *ev, 
		string ndxdata);
#pragma linkage(somTP_ooxdbf_attach_index, system)
typedef somTP_ooxdbf_attach_index *somTD_ooxdbf_attach_index;
#define somMD_ooxdbf_attach_index "::ooxdbf::attach_index"
#define ooxdbf_attach_index(somSelf,ev,ndxdata) \
    (SOM_Resolve(somSelf, ooxdbf, attach_index) \
	(somSelf,ev,ndxdata))
#ifndef SOMGD_attach_index
    #if (defined(_attach_index) || defined(__attach_index))
        #undef _attach_index
        #undef __attach_index
        #define SOMGD_attach_index 1
    #else
        #define _attach_index ooxdbf_attach_index
    #endif /* _attach_index */
#endif /* SOMGD_attach_index */

/*
 * New Method: use_index
 */
typedef long   SOMLINK somTP_ooxdbf_use_index(ooxdbf somSelf, Environment *ev, 
		string ndxdata);
#pragma linkage(somTP_ooxdbf_use_index, system)
typedef somTP_ooxdbf_use_index *somTD_ooxdbf_use_index;
#define somMD_ooxdbf_use_index "::ooxdbf::use_index"
#define ooxdbf_use_index(somSelf,ev,ndxdata) \
    (SOM_Resolve(somSelf, ooxdbf, use_index) \
	(somSelf,ev,ndxdata))
#ifndef SOMGD_use_index
    #if (defined(_use_index) || defined(__use_index))
        #undef _use_index
        #undef __use_index
        #define SOMGD_use_index 1
    #else
        #define _use_index ooxdbf_use_index
    #endif /* _use_index */
#endif /* SOMGD_use_index */

/*
 * New Method: createindex
 */
typedef long   SOMLINK somTP_ooxdbf_createindex(ooxdbf somSelf, Environment *ev, 
		string name, 
		string ndxdata);
#pragma linkage(somTP_ooxdbf_createindex, system)
typedef somTP_ooxdbf_createindex *somTD_ooxdbf_createindex;
#define somMD_ooxdbf_createindex "::ooxdbf::createindex"
#define ooxdbf_createindex(somSelf,ev,name,ndxdata) \
    (SOM_Resolve(somSelf, ooxdbf, createindex) \
	(somSelf,ev,name,ndxdata))
#ifndef SOMGD_createindex
    #if (defined(_createindex) || defined(__createindex))
        #undef _createindex
        #undef __createindex
        #define SOMGD_createindex 1
    #else
        #define _createindex ooxdbf_createindex
    #endif /* _createindex */
#endif /* SOMGD_createindex */

/*
 * New Method: buildindex
 */
typedef long   SOMLINK somTP_ooxdbf_buildindex(ooxdbf somSelf, Environment *ev, 
		string ndxdata);
#pragma linkage(somTP_ooxdbf_buildindex, system)
typedef somTP_ooxdbf_buildindex *somTD_ooxdbf_buildindex;
#define somMD_ooxdbf_buildindex "::ooxdbf::buildindex"
#define ooxdbf_buildindex(somSelf,ev,ndxdata) \
    (SOM_Resolve(somSelf, ooxdbf, buildindex) \
	(somSelf,ev,ndxdata))
#ifndef SOMGD_buildindex
    #if (defined(_buildindex) || defined(__buildindex))
        #undef _buildindex
        #undef __buildindex
        #define SOMGD_buildindex 1
    #else
        #define _buildindex ooxdbf_buildindex
    #endif /* _buildindex */
#endif /* SOMGD_buildindex */

/*
 * New Method: add_tag
 */
typedef long   SOMLINK somTP_ooxdbf_add_tag(ooxdbf somSelf, Environment *ev, 
		string ndxdata, 
		string key);
#pragma linkage(somTP_ooxdbf_add_tag, system)
typedef somTP_ooxdbf_add_tag *somTD_ooxdbf_add_tag;
#define somMD_ooxdbf_add_tag "::ooxdbf::add_tag"
#define ooxdbf_add_tag(somSelf,ev,ndxdata,key) \
    (SOM_Resolve(somSelf, ooxdbf, add_tag) \
	(somSelf,ev,ndxdata,key))
#ifndef SOMGD_add_tag
    #if (defined(_add_tag) || defined(__add_tag))
        #undef _add_tag
        #undef __add_tag
        #define SOMGD_add_tag 1
    #else
        #define _add_tag ooxdbf_add_tag
    #endif /* _add_tag */
#endif /* SOMGD_add_tag */

/*
 * New Method: drop_tag
 */
typedef long   SOMLINK somTP_ooxdbf_drop_tag(ooxdbf somSelf, Environment *ev, 
		string ndxdata);
#pragma linkage(somTP_ooxdbf_drop_tag, system)
typedef somTP_ooxdbf_drop_tag *somTD_ooxdbf_drop_tag;
#define somMD_ooxdbf_drop_tag "::ooxdbf::drop_tag"
#define ooxdbf_drop_tag(somSelf,ev,ndxdata) \
    (SOM_Resolve(somSelf, ooxdbf, drop_tag) \
	(somSelf,ev,ndxdata))
#ifndef SOMGD_drop_tag
    #if (defined(_drop_tag) || defined(__drop_tag))
        #undef _drop_tag
        #undef __drop_tag
        #define SOMGD_drop_tag 1
    #else
        #define _drop_tag ooxdbf_drop_tag
    #endif /* _drop_tag */
#endif /* SOMGD_drop_tag */

/*
 * New Method: export
 */
typedef long   SOMLINK somTP_ooxdbf_export(ooxdbf somSelf, Environment *ev, 
		string filename, 
		char delimiter);
#pragma linkage(somTP_ooxdbf_export, system)
typedef somTP_ooxdbf_export *somTD_ooxdbf_export;
#define somMD_ooxdbf_export "::ooxdbf::export"
#define ooxdbf_export(somSelf,ev,filename,delimiter) \
    (SOM_Resolve(somSelf, ooxdbf, export) \
	(somSelf,ev,filename,delimiter))
#ifndef SOMGD_export
    #if (defined(_export) || defined(__export))
        #undef _export
        #undef __export
        #define SOMGD_export 1
    #else
        #define _export ooxdbf_export
    #endif /* _export */
#endif /* SOMGD_export */

/*
 * New Method: import
 */
typedef long   SOMLINK somTP_ooxdbf_import(ooxdbf somSelf, Environment *ev, 
		string filename, 
		char delimiter);
#pragma linkage(somTP_ooxdbf_import, system)
typedef somTP_ooxdbf_import *somTD_ooxdbf_import;
#define somMD_ooxdbf_import "::ooxdbf::import"
#define ooxdbf_import(somSelf,ev,filename,delimiter) \
    (SOM_Resolve(somSelf, ooxdbf, import) \
	(somSelf,ev,filename,delimiter))
#ifndef SOMGD_import
    #if (defined(_import) || defined(__import))
        #undef _import
        #undef __import
        #define SOMGD_import 1
    #else
        #define _import ooxdbf_import
    #endif /* _import */
#endif /* SOMGD_import */

/*
 * New Method: sort
 */
typedef long   SOMLINK somTP_ooxdbf_sort(ooxdbf somSelf, Environment *ev, 
		string filename, 
		string fields);
#pragma linkage(somTP_ooxdbf_sort, system)
typedef somTP_ooxdbf_sort *somTD_ooxdbf_sort;
#define somMD_ooxdbf_sort "::ooxdbf::sort"
#define ooxdbf_sort(somSelf,ev,filename,fields) \
    (SOM_Resolve(somSelf, ooxdbf, sort) \
	(somSelf,ev,filename,fields))
#ifndef SOMGD_sort
    #if (defined(_sort) || defined(__sort))
        #undef _sort
        #undef __sort
        #define SOMGD_sort 1
    #else
        #define _sort ooxdbf_sort
    #endif /* _sort */
#endif /* SOMGD_sort */

/*
 * New Method: usingfilename
 */
typedef void   SOMLINK somTP_ooxdbf_usingfilename(ooxdbf somSelf, Environment *ev, 
		somInitCtrl* ctrl, 
		string Name);
#pragma linkage(somTP_ooxdbf_usingfilename, system)
typedef somTP_ooxdbf_usingfilename *somTD_ooxdbf_usingfilename;
#define somMD_ooxdbf_usingfilename "::ooxdbf::usingfilename"
#define ooxdbf_usingfilename(somSelf,ev,ctrl,Name) \
    (SOM_Resolve(somSelf, ooxdbf, usingfilename) \
	(somSelf,ev,ctrl,Name))
#ifndef SOMGD_usingfilename
    #if (defined(_usingfilename) || defined(__usingfilename))
        #undef _usingfilename
        #undef __usingfilename
        #define SOMGD_usingfilename 1
    #else
        #define _usingfilename ooxdbf_usingfilename
    #endif /* _usingfilename */
#endif /* SOMGD_usingfilename */

/*
 * New Method: defineDBF
 */
typedef void   SOMLINK somTP_ooxdbf_defineDBF(ooxdbf somSelf, Environment *ev, 
		somInitCtrl* ctrl, 
		string Name, 
		ooxfield field);
#pragma linkage(somTP_ooxdbf_defineDBF, system)
typedef somTP_ooxdbf_defineDBF *somTD_ooxdbf_defineDBF;
#define somMD_ooxdbf_defineDBF "::ooxdbf::defineDBF"
#define ooxdbf_defineDBF(somSelf,ev,ctrl,Name,field) \
    (SOM_Resolve(somSelf, ooxdbf, defineDBF) \
	(somSelf,ev,ctrl,Name,field))
#ifndef SOMGD_defineDBF
    #if (defined(_defineDBF) || defined(__defineDBF))
        #undef _defineDBF
        #undef __defineDBF
        #define SOMGD_defineDBF 1
    #else
        #define _defineDBF ooxdbf_defineDBF
    #endif /* _defineDBF */
#endif /* SOMGD_defineDBF */

/*
 * New Method: defineDBFusing
 */
typedef void   SOMLINK somTP_ooxdbf_defineDBFusing(ooxdbf somSelf, Environment *ev, 
		somInitCtrl* ctrl, 
		string Name, 
		ooxdbf usingDBF);
#pragma linkage(somTP_ooxdbf_defineDBFusing, system)
typedef somTP_ooxdbf_defineDBFusing *somTD_ooxdbf_defineDBFusing;
#define somMD_ooxdbf_defineDBFusing "::ooxdbf::defineDBFusing"
#define ooxdbf_defineDBFusing(somSelf,ev,ctrl,Name,usingDBF) \
    (SOM_Resolve(somSelf, ooxdbf, defineDBFusing) \
	(somSelf,ev,ctrl,Name,usingDBF))
#ifndef SOMGD_defineDBFusing
    #if (defined(_defineDBFusing) || defined(__defineDBFusing))
        #undef _defineDBFusing
        #undef __defineDBFusing
        #define SOMGD_defineDBFusing 1
    #else
        #define _defineDBFusing ooxdbf_defineDBFusing
    #endif /* _defineDBFusing */
#endif /* SOMGD_defineDBFusing */

/*
 * New Method: DBFdefined
 */
typedef long   SOMLINK somTP_ooxdbf_DBFdefined(ooxdbf somSelf, Environment *ev);
#pragma linkage(somTP_ooxdbf_DBFdefined, system)
typedef somTP_ooxdbf_DBFdefined *somTD_ooxdbf_DBFdefined;
#define somMD_ooxdbf_DBFdefined "::ooxdbf::DBFdefined"
#define ooxdbf_DBFdefined(somSelf,ev) \
    (SOM_Resolve(somSelf, ooxdbf, DBFdefined) \
	(somSelf,ev))
#ifndef SOMGD_DBFdefined
    #if (defined(_DBFdefined) || defined(__DBFdefined))
        #undef _DBFdefined
        #undef __DBFdefined
        #define SOMGD_DBFdefined 1
    #else
        #define _DBFdefined ooxdbf_DBFdefined
    #endif /* _DBFdefined */
#endif /* SOMGD_DBFdefined */

/*
 * New Method: addfld
 */
typedef long   SOMLINK somTP_ooxdbf_addfld(ooxdbf somSelf, Environment *ev, 
		ooxfield field);
#pragma linkage(somTP_ooxdbf_addfld, system)
typedef somTP_ooxdbf_addfld *somTD_ooxdbf_addfld;
#define somMD_ooxdbf_addfld "::ooxdbf::addfld"
#define ooxdbf_addfld(somSelf,ev,field) \
    (SOM_Resolve(somSelf, ooxdbf, addfld) \
	(somSelf,ev,field))
#ifndef SOMGD_addfld
    #if (defined(_addfld) || defined(__addfld))
        #undef _addfld
        #undef __addfld
        #define SOMGD_addfld 1
    #else
        #define _addfld ooxdbf_addfld
    #endif /* _addfld */
#endif /* SOMGD_addfld */

/*
 * New Method: dropfld
 */
typedef long   SOMLINK somTP_ooxdbf_dropfld(ooxdbf somSelf, Environment *ev, 
		ooxfield field);
#pragma linkage(somTP_ooxdbf_dropfld, system)
typedef somTP_ooxdbf_dropfld *somTD_ooxdbf_dropfld;
#define somMD_ooxdbf_dropfld "::ooxdbf::dropfld"
#define ooxdbf_dropfld(somSelf,ev,field) \
    (SOM_Resolve(somSelf, ooxdbf, dropfld) \
	(somSelf,ev,field))
#ifndef SOMGD_dropfld
    #if (defined(_dropfld) || defined(__dropfld))
        #undef _dropfld
        #undef __dropfld
        #define SOMGD_dropfld 1
    #else
        #define _dropfld ooxdbf_dropfld
    #endif /* _dropfld */
#endif /* SOMGD_dropfld */

/*
 * New Method: modifyfld
 */
typedef long   SOMLINK somTP_ooxdbf_modifyfld(ooxdbf somSelf, Environment *ev, 
		ooxfield oldfield, 
		ooxfield newfield);
#pragma linkage(somTP_ooxdbf_modifyfld, system)
typedef somTP_ooxdbf_modifyfld *somTD_ooxdbf_modifyfld;
#define somMD_ooxdbf_modifyfld "::ooxdbf::modifyfld"
#define ooxdbf_modifyfld(somSelf,ev,oldfield,newfield) \
    (SOM_Resolve(somSelf, ooxdbf, modifyfld) \
	(somSelf,ev,oldfield,newfield))
#ifndef SOMGD_modifyfld
    #if (defined(_modifyfld) || defined(__modifyfld))
        #undef _modifyfld
        #undef __modifyfld
        #define SOMGD_modifyfld 1
    #else
        #define _modifyfld ooxdbf_modifyfld
    #endif /* _modifyfld */
#endif /* SOMGD_modifyfld */

/*
 * Other Constructors for ooxdbf
 */
static ooxdbf ooxdbfNew_usingfilename(Environment *ev,string Name)
{
   ooxdbf __somtmp_ooxdbf;
   if (!_ooxdbf) ooxdbfNewClass(ooxdbf_MajorVersion, ooxdbf_MinorVersion);
   __somtmp_ooxdbf = SOMClass_somNewNoInit(_ooxdbf);
   ooxdbf_usingfilename(__somtmp_ooxdbf,ev,0,Name);
   return __somtmp_ooxdbf;
}

static ooxdbf ooxdbfNew_defineDBF(Environment *ev,string Name,ooxfield field)
{
   ooxdbf __somtmp_ooxdbf;
   if (!_ooxdbf) ooxdbfNewClass(ooxdbf_MajorVersion, ooxdbf_MinorVersion);
   __somtmp_ooxdbf = SOMClass_somNewNoInit(_ooxdbf);
   ooxdbf_defineDBF(__somtmp_ooxdbf,ev,0,Name,field);
   return __somtmp_ooxdbf;
}

static ooxdbf ooxdbfNew_defineDBFusing(Environment *ev,string Name,ooxdbf usingDBF)
{
   ooxdbf __somtmp_ooxdbf;
   if (!_ooxdbf) ooxdbfNewClass(ooxdbf_MajorVersion, ooxdbf_MinorVersion);
   __somtmp_ooxdbf = SOMClass_somNewNoInit(_ooxdbf);
   ooxdbf_defineDBFusing(__somtmp_ooxdbf,ev,0,Name,usingDBF);
   return __somtmp_ooxdbf;
}

#ifndef SOM_DONT_USE_INHERITED_MACROS
#define ooxdbf_somDefaultInit SOMObject_somDefaultInit
#define ooxdbf_somDestruct SOMObject_somDestruct
#define ooxdbf_somDefaultCopyInit SOMObject_somDefaultCopyInit
#define ooxdbf_somDefaultAssign SOMObject_somDefaultAssign
#define ooxdbf_somDefaultConstCopyInit SOMObject_somDefaultConstCopyInit
#define ooxdbf_somDefaultVCopyInit SOMObject_somDefaultVCopyInit
#define ooxdbf_somDefaultConstVCopyInit SOMObject_somDefaultConstVCopyInit
#define ooxdbf_somDefaultConstAssign SOMObject_somDefaultConstAssign
#define ooxdbf_somDefaultVAssign SOMObject_somDefaultVAssign
#define ooxdbf_somDefaultConstVAssign SOMObject_somDefaultConstVAssign
#define ooxdbf_somInit SOMObject_somInit
#define ooxdbf_somFree SOMObject_somFree
#define ooxdbf_somUninit SOMObject_somUninit
#define ooxdbf_somGetClass SOMObject_somGetClass
#define ooxdbf_somGetClassName SOMObject_somGetClassName
#define ooxdbf_somGetSize SOMObject_somGetSize
#define ooxdbf_somIsA SOMObject_somIsA
#define ooxdbf_somIsInstanceOf SOMObject_somIsInstanceOf
#define ooxdbf_somRespondsTo SOMObject_somRespondsTo
#define ooxdbf_somDispatch SOMObject_somDispatch
#define ooxdbf_somClassDispatch SOMObject_somClassDispatch
#define ooxdbf_somCastObj SOMObject_somCastObj
#define ooxdbf_somResetObj SOMObject_somResetObj
#define ooxdbf_somDispatchV SOMObject_somDispatchV
#define ooxdbf_somDispatchL SOMObject_somDispatchL
#define ooxdbf_somDispatchA SOMObject_somDispatchA
#define ooxdbf_somDispatchD SOMObject_somDispatchD
#define ooxdbf_somPrintSelf SOMObject_somPrintSelf
#define ooxdbf_somDumpSelf SOMObject_somDumpSelf
#define ooxdbf_somDumpSelfInt SOMObject_somDumpSelfInt
#endif /* SOM_DONT_USE_INHERITED_MACROS */

#endif       /* SOM_ooxdbf_h */
